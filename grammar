program             → statement* EOF ;

// statements

statement           → blockStmt | ((declarationStmt | printStmt | exprStmt) ";") ;

blockStmt           → "{" statement* "}" ;
declarationStmt     → "let" IDENTIFIER ":" objType "=" expression ;
// only shown to make clear that exprStmt is a possible statement type
exprStmt            → expression ;
printStmt           → "print" expression ;

objectType          → "number" | "string" | "bool" ;

// expressions

expression          → assignment ;
assignment          → IDENTIFIER "=" assignment
                    | equality ;
equality            → comparison ( ( "!=" | "==" ) comparison )* ;
comparison          → term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term                → factor ( ( "-" | "+" ) factor )* ;
factor              → unary ( ( "/" | "*" ) unary )* ;
unary               → ( "!" | "-" ) unary
                    | primary ;
primary             → NUMBER | STRING | "true" | "false"
                    | "(" expression ")" | IDENTIFIER ;
