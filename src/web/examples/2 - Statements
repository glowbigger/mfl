// MFL programs consist of statements ending with a closing semicolon.

// Print statements use the built-in 'print' keyword.
print 'hello';

// Variables can be declared with 'let'. The types will be discussed later.
let x = 69; let y = 'im a string'; let z = true;
print x; print y; print z;

// Variables can then be assigned.
x = 5; y = 'hello'; z = false;
print x; print y; print z;

// Block statements are wrapped in '{' and '}' and have their own scope.
let x = 'outer'; let y = 'outer';
{
  let x = 'inner, not outer';
  print x; print y;
}

// If-else statements use a 'if' statement 'then' statement 'else' syntax.
if 1 > 0 then print 'yes';

if 1 > 0 then
  print 'yes';
else
  print 'no';

// WARNING: be sure to use '{' and '}' for multi-line statements
if true then {
  print 'line 1';
  print 'line 2';
}

// While loops use a 'while' condition 'do' statement syntax.
let i = 0;
while i < 5 do {
  print i;
  i = i + 1;
}

// Use the 'break' keyword to escape a while loop.
while true do {
  print 'forever?';
  break;
}
print 'nope';

// Finally, C-style comments are supported.

// this is a one-line comment
/* this is a multi-line comment */
/* this is a /* nested */ comment */
