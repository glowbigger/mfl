// function type inference
let f =
fn(x: number, y: string) => void { print x; };

// valid function type hinting
let f: (number, string) => void =
fn(x: number, y: string) => void { print x; };
let f: (() => void) => void =
fn(x: () => void) => void { print x; };
let f: ((string, number) => void, () => string ) => void =
fn(x: (string, number) => void, y: () => string ) => void { print x; };

// invalid function type hinting
let f: (string, string) => void =
fn(x: number, y: string) => void { print x; };
let f: (number, string, string) => void =
fn(x: number, y: string) => void { print x; };
let f: (number, string) => string =
fn(x: number, y: string) => void { print x; };
let f: (number, string) => void =
fn(x: number, y: string) => string { print x; };
let f: (() => void) => void =
fn(x: number, y: string) => string { print x; };
let f: ((string, number) => void) => void =
fn(x: (string, number) => void, y: string) => void { print x; };
